:root {
    --light: #f5f5f5;
    --black: #000000;
    --grey: color-mix(in srgb,var(--black)70%,transparent);
    --border-color: #dddddd;
    --gutter: 2rem;
    --font-size-medium: clamp(1.1rem, 1.3vw, 1.3rem);
    --font-weight-medium: 500;
    --font-weight-bold: 600;
    --font-weight-bolder: 700;
}

::-webkit-scrollbar {
    width: 2px;
}

::-webkit-scrollbar-thumb {
    background: var(--black);
}

::-webkit-scrollbar-track {
    background: var(--light);
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    text-rendering: optimizeLegibility;
}

html,
body {
    max-width: 100vw;
    overflow-x: hidden;
    font-weight: var(--font-weight-bold);
}

body {
    background-color: var(--black);
    position: relative;
}

a {
    color: inherit;
    text-decoration: none;
}

button {
    cursor: pointer;
    border: none;
    background-color: transparent;
}

h1, h2, h3 {
    line-height: 1em;
}

h1, h2, h3, h4, h5 {
    font-weight: var(--font-weight-bold);
}

h1 {
    font-size: clamp(4rem, 7vw, 7rem);
    margin-bottom: 3rem;
    letter-spacing: -4px;
}

p {
    font-size: var(--font-size-medium);
    line-height: 1.5;
    color: var(--grey);
    font-weight: var(--font-weight-medium);
}

input, textarea, button {
    font-family: inherit;
}

img {
    display: block;
    width: 100%;
}

ul, ol {
    list-style: none;
}


// classes
.page-transition {
    background-color: var(--light);
    position: fixed;
    width: 100vw;
    height: 100vh;
    z-index: 0;
}

.container {
    width: 100vw;
}

.page {
    background-color: var(--light);
    color: var(--black);
    position: relative;   
    min-height: 100vh;
    padding-top: 9rem;
    padding-bottom: 6rem;
    padding-left: 10%;
    padding-right: 10%;
}

.grid {
    display: grid;
    gap: 5rem;
    grid-template-columns: repeat(2, minmax(300px, 1fr));
}

.subtitle {
    font-size: clamp(1.9rem, 2.5vw, 2.5rem);
    margin-bottom: 2rem;
}

.hover-underline {
    position: relative;
    width: fit-content;

    &::after {
        content: '';
        position: absolute;
        width: 100%;
        transform: scaleX(0);
        height: 2px;
        bottom: -4px;
        left: 0;
        background-color: var(--light);
        mix-blend-mode: difference;
        transform-origin: bottom right;
        transition: transform 0.25s ease-out;
    }

    &:hover::after {
        transform: scaleX(1);
        transform-origin: bottom left;
    }
}

.button {
    padding: 0.75rem 2rem;
    background-color: var(--black);
    color: var(--light);
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    font-size: 1rem;
    font-weight: var(--font-weight-bold);
    border: none;
    outline: none;
    transition: padding 0.3s ease;

    &:has(.spinner) {
        padding-left: calc(2rem + 32px);
    }
}

button[disabled] {
    cursor: not-allowed;
}

.link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: var(--font-size-medium);
    width: fit-content;
}

.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
}

.modal {
    position: relative;
    padding: 1.5rem;
    margin: 0 var(--gutter);
    background-color: var(--black);
    max-width: 400px;

    p {
        color: var(--light);
    }

    &__close-btn {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        color: var(--light);
        font-size: 1.5rem;
    }
}

.spinner {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 2rem;
    animation: rotate 0.8s linear infinite;
}


// media queries
@media (max-width: 1200px) {
    .page {
        padding-left: 4rem;
        padding-right: 4rem;
    }
}

@media (max-width: 1024px) {
    .page {
        padding: 8rem var(--gutter);
    }

    .grid {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 3rem;
    }
}

@media (max-width: 768px) {
    :root {
        --gutter: 1rem;
    }
}

@keyframes rotate {
    to {
        transform: translateY(-50%) rotate(360deg);
    }
}